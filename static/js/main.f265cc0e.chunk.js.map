{"version":3,"sources":["services/cryptoApi.js","components/Homepage.jsx","images/cryptocurrency.png","components/NavBar.jsx","services/cryptoNewsApi.js","components/Loader.jsx","components/News.jsx","components/Cryptocurrency.jsx","components/Exchanges.jsx","services/coinGecko.js","utilities/chartConfigs/chartConfigs.js","components/LineChart.jsx","components/CryptoDetails.jsx","App.js","app/store.js","index.js"],"names":["baseUrl","createRequest","url","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","endpoints","builder","getCryptos","query","cryptoApiList","getCryptosList","count","getCryptoDetails","coinId","getCryptoHistory","days","getCryptoExchanges","useGetCryptosListQuery","useGetCryptoDetailsQuery","useGetCryptoExchangesQuery","useGetCryptoHistoryQuery","useGetCryptosQuery","Title","Typography","Homepage","data","isFetching","globalStats","level","className","span","title","value","active_cryptocurrencies","ongoing_icos","millify","total_market_cap","btc","markets","Number","market_cap_change_percentage_24h_usd","toFixed","to","simplified","NavBar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","src","icon","size","onClick","prevState","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","header","useGetCryptoNewsQuery","Loader","Text","Option","Select","News","setNewsCategory","cryptosList","cryptoNews","articles","gutter","showSearch","placeholder","optionFilterProp","onChange","filterOption","input","option","toLowerCase","indexOf","map","c","name","news","i","xs","sm","lg","hoverable","cover","urlToImage","alt","href","target","rel","description","HTMLReactParser","substring","source","moment","publishedAt","startOf","fromNow","Cryptocurrency","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","filter","item","includes","e","slice","x","id","extra","image","current_price","market_cap","style","display","justifyContent","color","Math","sign","price_change_percentage_24h","Panel","Collapse","Exchanges","exchangesList","exchange","showArrow","trust_score_rank","axios","create","baseURL","historyOptions","scales","xAxes","type","time","parser","tooltipFormat","unit","unitStepSize","displayFormats","day","yAxes","ticks","beginAtZero","LineChart","timePeriod","currentPrice","coinName","coinPercentageChangeDay","coinData","setCoinData","fetchData","a","coinGecko","get","params","vs_currency","results","prices","coinPrice","coinTimestamp","length","push","Date","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","pointRadius","options","CryptoDetails","useParams","setTimePeriod","cryptoDetails","market_data","stats","usd","DollarCircleOutlined","market_cap_rank","NumberOutlined","total_volume","ThunderboltOutlined","high_24h","TrophyOutlined","genericStats","total_supply","ExclamationCircleOutlined","circulating_supply","blockChainSites","links","homepage","trim","gitHubLinks","repos_url","github","timeFrame","String","getTimeperiod","symbol","defaultValue","date","en","GithubOutlined","LinkOutlined","App","path","element","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.f265cc0e.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst baseUrl = \"https://api.coingecko.com/api/v3\";\n\nconst createRequest = (url) => ({ url });\n\nexport const cryptoApi = createApi({\n  reducerPath: \"cryptoApi\",\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: () => createRequest(\"/global\"),\n    }),\n  }),\n});\n\nexport const cryptoApiList = createApi({\n  reducerPath: \"cryptoApiList\",\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCryptosList: builder.query({\n      query: (count) =>\n        createRequest(\n          `/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=${count}&page=1&sparkline=false`\n        ),\n    }),\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coins/${coinId}`),\n    }),\n    getCryptoHistory: builder.query({\n      query: ({ coinId, days }) =>\n        createRequest(\n          `/coins/${coinId}/market_chart?vs_currency=usd&days=${days}`\n        ),\n    }),\n    getCryptoExchanges: builder.query({\n      query: () => createRequest(\"/exchanges\"),\n    }),\n  }),\n});\n\nexport const {\n  useGetCryptosListQuery,\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n  useGetCryptoExchangesQuery,\n} = cryptoApiList;\nexport const { useGetCryptosQuery } = cryptoApi;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Typography, Row, Col, Statistic } from \"antd\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport { Cryptocurrency, News } from \".\";\nimport millify from \"millify\";\n\nconst { Title } = Typography;\n\nfunction Homepage() {\n  const { data, isFetching } = useGetCryptosQuery();\n\n  const globalStats = data?.data;\n\n  // let sum = 0;\n  // const totalMarketCap = globalStats.total_market_cap;\n  // const keyArr = Object.values(totalMarketCap);\n  // keyArr.map((x) => (sum += x.value));\n\n  if (isFetching) return \"Loading...\";\n\n  return (\n    <>\n      <Title level={2} className=\"heading\">\n        Global Crypto Stats\n      </Title>\n      <Row>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Coins Tracked\"\n            value={globalStats.active_cryptocurrencies}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic title=\"Ongoing ICOs\" value={globalStats.ongoing_icos} />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Market Cap BTC\"\n            value={millify(globalStats.total_market_cap.btc)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic title=\"Markets\" value={globalStats.markets} />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Market Cap change 24h\"\n            value={Number(\n              globalStats.market_cap_change_percentage_24h_usd\n            ).toFixed(2)}\n          />\n        </Col>\n      </Row>\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Top 10 Cryptocurrencies by market cap\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to=\"/crypto\">Show More</Link>\n        </Title>\n      </div>\n      <Cryptocurrency simplified />\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Latest Crypto News\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to=\"/news\">Show More</Link>\n        </Title>\n      </div>\n      <News simplified />\n    </>\n  );\n}\n\nexport default Homepage;\n","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from \"react\";\nimport { Button, Menu, Typography, Avatar } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport icon from \"../images/cryptocurrency.png\";\nimport {\n  HomeOutlined,\n  MoneyCollectOutlined,\n  BulbOutlined,\n  FundOutlined,\n  MenuOutlined,\n} from \"@ant-design/icons\";\n\nconst NavBar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(null);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener(\"resize\", handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize < 768) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\">\n          <Link to=\"/\">Cryptoverse</Link>\n        </Typography.Title>\n        <Button\n          className=\"menu-control-container\"\n          onClick={() => {\n            setActiveMenu((prevState) => !prevState);\n          }}\n        >\n          <MenuOutlined />\n        </Button>\n      </div>\n      {activeMenu && (\n        <div>\n          <Menu theme=\"dark\">\n            <Menu.Item icon={<HomeOutlined />}>\n              <Link to=\"/\">Home</Link>\n            </Menu.Item>\n            <Menu.Item icon={<FundOutlined />}>\n              <Link to=\"/crypto\">cryptocurrency</Link>\n            </Menu.Item>\n            <Menu.Item icon={<MoneyCollectOutlined />}>\n              <Link to=\"/exchanges\">Exchanges</Link>\n            </Menu.Item>\n            <Menu.Item icon={<BulbOutlined />}>\n              <Link to=\"/news\">News</Link>\n            </Menu.Item>\n          </Menu>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NavBar;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoNewsHeaders = {\n  \"X-Api-Key\": \"c98deb31fb6743feb117bf28804cb77e\",\n};\n\nconst baseUrl = \"https://newsapi.org/v2\";\n\nconst createRequest = (url) => ({ url, header: cryptoNewsHeaders });\n\nexport const cryptoNewsApi = createApi({\n  reducerPath: \"cryptoNewsApi\",\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCryptoNews: builder.query({\n      query: ({ newsCategory, count }) =>\n        createRequest(\n          `/everything?q=${newsCategory}&apiKey=c98deb31fb6743feb117bf28804cb77e`\n        ),\n    }),\n  }),\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\n","import React from \"react\";\nimport { Spin } from \"antd\";\n\nexport const Loader = () => {\n  return (\n    <div className=\"loader\">\n      <Spin />\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Select, Typography, Row, Col, Card } from \"antd\";\nimport moment from \"moment\";\n\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\nimport { useGetCryptosListQuery } from \"../services/cryptoApi\";\n\nimport { Loader } from \"./Loader\";\nimport HTMLReactParser from \"html-react-parser\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\n  const { data: cryptosList } = useGetCryptosListQuery(simplified ? 10 : 100);\n  const { data: cryptoNews, isFetching } = useGetCryptoNewsQuery({\n    newsCategory,\n    count: simplified ? 10 : 100,\n  });\n\n  if (isFetching) {\n    return <Loader />;\n  }\n\n  const articles = cryptoNews.articles;\n\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a news Category\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) =>\n              option.value.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            <Option value=\"Cryptocurrency\"></Option>\n            {cryptosList?.map((c) => (\n              <Option value={c.name}>{c.name}</Option>\n            ))}\n          </Select>\n        </Col>\n      )}\n      {articles.map((news, i) => (\n        <Col xs={24} sm={12} lg={8} key={i}>\n          <Card\n            hoverable\n            className=\"news-card\"\n            cover={<img src={news.urlToImage} alt=\"\" />}\n          >\n            <a href={news?.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>\n                  {news?.title}\n                </Title>\n              </div>\n              <p>\n                {news.description > 100\n                  ? `${HTMLReactParser(news.description.substring(0, 100))}...`\n                  : HTMLReactParser(news.description)}\n              </p>\n              <div className=\"provider-container\">\n                <div>\n                  <Text className=\"provider-name\">{news.source.name}</Text>\n                </div>\n                <div>\n                  <Text>\n                    {moment(news.publishedAt).startOf(\"ss\").fromNow()}\n                  </Text>\n                </div>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default News;\n","import React, { useState, useEffect } from \"react\";\nimport millify from \"millify\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col, Input } from \"antd\";\n\nimport { useGetCryptosListQuery } from \"../services/cryptoApi\";\n\nimport { Loader } from \"./Loader\";\n\nfunction Cryptocurrency({ simplified }) {\n  const count = simplified ? 10 : 200;\n  const { data: cryptosList, isFetching } = useGetCryptosListQuery(count);\n  const [cryptos, setCryptos] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    setCryptos(cryptosList);\n\n    const filteredData = cryptosList?.filter((item) =>\n      item.name.toLowerCase().includes(searchTerm)\n    );\n\n    setCryptos(filteredData);\n  }, [searchTerm, cryptosList]);\n\n  // const handleSearchTerm = (e) => {\n  //   setSearchTerm(e.target.value);\n  //   const filteredData = cryptos.filter((c) =>\n  //     c.name.toLowerCase().includes(searchTerm.toLowerCase())\n  //   );\n  //   setCryptos(filteredData);\n  // };\n\n  if (isFetching) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Seacrh Cryptocurrency\"\n            onChange={(e) => setSearchTerm(e.target.value.toLowerCase())}\n          />\n        </div>\n      )}\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.slice(0, count).map((x) => (\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={x.id}>\n            <Link key={x.id} to={`/crypto/${x.id}`}>\n              <Card\n                title={`${x.name}`}\n                extra={\n                  <img className=\"crypto-image\" src={x.image} alt=\"coin-img\" />\n                }\n                hoverable\n              >\n                <p>Price: ${millify(Number(x.current_price))}</p>\n                <p>Market Cap: ${millify(Number(x.market_cap))}</p>\n                <p style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                  24hr Change:\n                  <div\n                    style={{\n                      color:\n                        Math.sign(Number(x.price_change_percentage_24h)) === -1\n                          ? \"red\"\n                          : \"green\",\n                    }}\n                  >\n                    {\" \"}\n                    {millify(Number(x.price_change_percentage_24h))}%\n                  </div>\n                </p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n}\n\nexport default Cryptocurrency;\n","import React from \"react\";\n// import millify from \"millify\";\nimport { Collapse, Row, Col, Typography, Avatar } from \"antd\";\nimport HTMLReactParser from \"html-react-parser\";\n\nimport { useGetCryptoExchangesQuery } from \"../services/cryptoApi\";\nimport { Loader } from \"./Loader\";\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n  const { data, isFetching } = useGetCryptoExchangesQuery();\n\n  if (isFetching) {\n    <Loader />;\n  }\n\n  const exchangesList = data;\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume BTC</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n      <Row>\n        {exchangesList?.map((exchange) => (\n          <Col span={24}>\n            <Collapse>\n              <Panel\n                key={exchange.id}\n                showArrow={false}\n                header={\n                  <Row key={exchange.id}>\n                    <Col span={12}>\n                      <Text>\n                        <strong>{exchange.trust_score_rank}.</strong>\n                      </Text>\n                      <Avatar className=\"exchange-image\" src={exchange.image} />\n                      <Text>\n                        <strong>{exchange.name}</strong>\n                      </Text>\n                    </Col>\n                    {/* <Col span={12}>\n                      ${millify(exchange.trade_volume_24h_btc)}\n                    </Col> */}\n                    {/* <Col span={6}>{exchange.year_established}</Col> */}\n                    {/* <Col span={6}>{exchange.country}</Col> */}\n                  </Row>\n                }\n              >\n                {HTMLReactParser(exchange.description || \"\")}\n              </Panel>\n            </Collapse>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Exchanges;\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://api.coingecko.com/api/v3\",\n});\n","export const historyOptions = {\n  scales: {\n    xAxes: [\n      {\n        display: true,\n        type: \"time\",\n        time: {\n          parser: \"MM/DD/YYYY HH:mm\",\n          tooltipFormat: \"ll HH:mm\",\n          unit: \"day\",\n          unitStepSize: 1,\n          displayFormats: {\n            day: \"MM/DD/YYYY\",\n          },\n        },\n      },\n    ],\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Col, Row, Typography } from \"antd\";\n\n// import { useGetCryptoHistoryQuery } from \"../services/cryptoApi\";\nimport coinGecko from \"../services/coinGecko\";\nimport { historyOptions } from \"../utilities/chartConfigs/chartConfigs\";\n\nconst { Title } = Typography;\n\nconst LineChart = ({\n  coinId,\n  timePeriod,\n  currentPrice,\n  coinName,\n  coinPercentageChangeDay,\n}) => {\n  // const { data: coinHistory } = useGetCryptoHistoryQuery({\n  //   coinId,\n  //   timePeriod,\n  // });\n\n  const [coinData, setCoinData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const results = await coinGecko.get(`/coins/${coinId}/market_chart`, {\n        params: {\n          vs_currency: \"usd\",\n          days: timePeriod,\n        },\n      });\n\n      setCoinData(results.data.prices);\n    };\n    fetchData();\n  }, [coinId, timePeriod]);\n\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinData.length; i++) {\n    coinPrice.push(coinData[i][1]);\n    coinTimestamp.push(new Date(coinData[i][0]).toLocaleDateString());\n  }\n\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: \"Price In USD\",\n        data: coinPrice,\n        fill: false,\n        backgroundColor: \"#0071bd\",\n        borderColor: \"#0071bd\",\n        pointRadius: 0,\n      },\n    ],\n  };\n\n  const options = historyOptions;\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">\n          {coinName} Price Chart{\" \"}\n        </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\" style={{ display: \"flex\" }}>\n            24h Change:{\" \"}\n            <div\n              style={{\n                color:\n                  Math.sign(Number(coinPercentageChangeDay)) === -1\n                    ? \"red\"\n                    : \"green\",\n              }}\n            >\n              {Number(coinPercentageChangeDay).toFixed(2)}%\n            </div>\n          </Title>\n          <Title level={5} className=\"current-price\">\n            Current {coinName} Price: $ {currentPrice}\n          </Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;\n","import React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport {\n  // MoneyCollectOutlined,\n  DollarCircleOutlined,\n  // FundOutlined,\n  ExclamationCircleOutlined,\n  // StopOutlined,\n  TrophyOutlined,\n  // CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n  LinkOutlined,\n  GithubOutlined,\n} from \"@ant-design/icons\";\nimport LineChart from \"./LineChart\";\n\nimport {\n  useGetCryptoDetailsQuery,\n  // useGetCryptoHistoryQuery,\n} from \"../services/cryptoApi\";\nimport { Loader } from \"./Loader\";\n\n// import chartData from \"../utilities/chartData\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst getTimeperiod = (timePeriod) => {\n  let days = \"7\";\n  switch (timePeriod) {\n    case \"1h\":\n      days = \"0.04167\";\n      break;\n\n    case \"3h\":\n      days = \"0.125\";\n      break;\n\n    case \"24h\":\n      days = \"1\";\n      break;\n\n    case \"7d\":\n      days = \"7\";\n      break;\n\n    case \"14d\":\n      days = \"14\";\n      break;\n\n    case \"30d\":\n      days = \"30\";\n      break;\n\n    case \"1y\":\n      days = \"365\";\n      break;\n\n    case \"max\":\n      days = \"max\";\n      break;\n\n    default:\n      days = \"24h\";\n      break;\n  }\n\n  return String(days);\n};\n\nfunction CryptoDetails() {\n  const { coinId } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"24h\");\n  const { data: cryptoDetails, isFetching } = useGetCryptoDetailsQuery(coinId);\n  // const { data: coinHistory } = useGetCryptoHistoryQuery({\n  //   coinId,\n  //   timePeriod,\n  // });\n\n  if (isFetching) {\n    return <Loader />;\n  }\n\n  const coinPercentageChangeDay =\n    cryptoDetails.market_data.price_change_percentage_24h;\n  const time = [\"1h\", \"3h\", \"24h\", \"7d\", \"14d\", \"30d\", \"1y\", \"max\"];\n\n  const stats = [\n    {\n      title: \"Price to USD\",\n      value: `$ ${\n        cryptoDetails?.market_data.current_price.usd &&\n        millify(cryptoDetails?.market_data.current_price.usd)\n      }`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: \"Rank\",\n      value: cryptoDetails?.market_cap_rank,\n      icon: <NumberOutlined />,\n    },\n    {\n      title: \"Total Volume\",\n      value: `$ ${\n        cryptoDetails?.market_data.total_volume.usd &&\n        millify(cryptoDetails?.market_data.total_volume.usd)\n      }`,\n      icon: <ThunderboltOutlined />,\n    },\n    {\n      title: \"Market Cap\",\n      value: `$ ${\n        cryptoDetails?.market_data.market_cap.usd &&\n        millify(cryptoDetails?.market_data.market_cap.usd)\n      }`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: \"24h High\",\n      value: `$ ${millify(cryptoDetails?.market_data.high_24h.usd)}`,\n      icon: <TrophyOutlined />,\n    },\n  ];\n\n  const genericStats = [\n    {\n      title: \"Total Supply\",\n      value: `$ ${\n        cryptoDetails?.market_data.total_supply &&\n        millify(cryptoDetails?.market_data.total_supply)\n      }`,\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Circulating Supply\",\n      value: `$ ${\n        cryptoDetails?.market_data.circulating_supply &&\n        millify(cryptoDetails?.market_data.circulating_supply)\n      }`,\n      icon: <ExclamationCircleOutlined />,\n    },\n  ];\n\n  const blockChainSites = cryptoDetails?.links.homepage.filter(\n    (x) => x.trim() !== \"\"\n  );\n\n  const gitHubLinks = cryptoDetails?.links.repos_url.github.filter(\n    (x) => x.trim() !== \"\"\n  );\n\n  let timeFrame = getTimeperiod(timePeriod);\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {cryptoDetails?.name} ({cryptoDetails?.symbol}) Price\n        </Title>\n        <p>\n          {cryptoDetails?.name} live price in USD, view value statistics, market\n          cap and supply\n        </p>\n      </Col>\n      <Select\n        defaultValue=\"24h\"\n        className=\"select-timeperiod\"\n        placeholder=\"Select Time Period\"\n        onChange={(value) => setTimePeriod(value)}\n      >\n        {time.map((date) => (\n          <Option key={date}>{date}</Option>\n        ))}\n      </Select>\n      <LineChart\n        coinId={coinId}\n        timePeriod={timeFrame}\n        coinPercentageChangeDay={coinPercentageChangeDay}\n        currentPrice={millify(cryptoDetails.market_data.current_price.usd)}\n        coinName={cryptoDetails.name}\n      />\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              {cryptoDetails?.name} Value Statistics\n            </Title>\n            <p>An overview showing details of {cryptoDetails?.name}</p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              Other Statistics\n            </Title>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={5} className=\"coin-details-heading\">\n            What is {cryptoDetails?.name}?<br />\n            {HTMLReactParser(cryptoDetails?.description.en)}\n          </Title>\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">\n            <GithubOutlined /> GitHub\n          </Title>\n          {gitHubLinks.map((x) => (\n            <Row className=\"coin-links\">\n              <a href={x} target=\"_blank\" rel=\"noreferrer\">\n                {x}\n              </a>\n            </Row>\n          ))}\n          {blockChainSites.map((x) => (\n            <Row className=\"coin-link\">\n              <a href={x} target=\"_blank\" rel=\"noreferrer\">\n                <Title level={3} className=\"coin-details-heading\">\n                  <LinkOutlined /> {cryptoDetails.name}\n                </Title>\n              </a>\n            </Row>\n          ))}\n\n          {/* {cryptoDetails.links.map((x) => (\n            <Row className=\"coin-link\" key={x.key}>\n              <Title level={5}>{x.key}</Title>\n            </Row>\n          ))} */}\n        </Col>\n      </Col>\n    </Col>\n  );\n}\n\nexport default CryptoDetails;\n","import React from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\nimport {\n  NavBar,\n  Exchanges,\n  Homepage,\n  Cryptocurrency,\n  News,\n  CryptoDetails,\n} from \"./components\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <NavBar />\n      </div>\n      <div className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n            <Routes>\n              <Route path=\"/\" element={<Homepage />} />\n              <Route path=\"/exchanges\" element={<Exchanges />} />\n              <Route path=\"/crypto\" element={<Cryptocurrency />} />\n              <Route path=\"crypto/:coinId\" element={<CryptoDetails />} />\n              <Route path=\"/news\" element={<News />} />\n            </Routes>\n          </div>\n        </Layout>\n\n        <div className=\"footer\">\n          <Typography.Title\n            level={5}\n            style={{ color: \"white\", textAlign: \"center\" }}\n          >\n            Cryptoverse <br />\n            All rights reserved\n          </Typography.Title>\n          <Space>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/exchanges\">Exchanges</Link>\n            <Link to=\"/news\">News</Link>\n          </Space>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { cryptoApi, cryptoApiList } from \"../services/cryptoApi\";\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n    [cryptoApiList.reducerPath]: cryptoApiList.reducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"antd/dist/antd.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}